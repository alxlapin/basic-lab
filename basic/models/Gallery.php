<?php

namespace app\models;

use Yii;
use yii\behaviors\TimestampBehavior;
use yii\web\UploadedFile;

/**
 * This is the model class for table "gallery".
 *
 * @property string $id
 * @property string $image_desc
 * @property string $image_desc_en
 * @property string $image_name
 * @property integer $created_at
 * @property integer $updated_at
 */
class Gallery extends \yii\db\ActiveRecord
{

    public $uploadedImage;

    public function behaviors()
    {
        return [
            TimestampBehavior::className(),
        ];
    }

    public function beforeSave($insert)
    {
        if ($this->uploadedImage) {
            $this->processUploadedImage($this->uploadedImage);
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function beforeDelete()
    {
        if (parent::beforeDelete()) {
            if (is_file($this->getImagePath())) {
                unlink($this->getImagePath());
            }
            if (is_file($this->getThumbPath())) {
                unlink($this->getThumbPath());
            }
            return true;
        } else {
            return false;
        }
    }
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'gallery';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['image_desc', 'image_desc_en', 'image_name'], 'string', 'max' => 255],
            [['uploadedImage'], 'image', 'extensions' => 'png, jpg, jpeg, gif', 'maxSize' => 1024 * 1024 * 2]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'image_desc' => 'Описание',
            'image_desc_en' => Yii::t('app', 'Image Desc En'),
            'image_name' => 'Image Name',
            'created_at' => 'Дата добавления',
            'updated_at' => 'Дата редактирования',
        ];
    }

    protected function processUploadedImage(UploadedFile $imageInstance) {
        $basePath = Yii::getAlias('@webroot') . '/images/gallery/';
        do {
            $imageName = $this->generateImageName();
        } while (file_exists($basePath . $imageName));
        $imageFullPath = $basePath . $imageName;
        $imageThumbPath = $basePath . 'thumbs/' . $imageName;
        $image = new \Imagick($imageInstance->tempName);
        if ($image->getImageWidth() > Yii::$app->params['imageMaxWidth'] || $image->getImageHeight() > Yii::$app->params['imageMaxHeight']) {
            $image->thumbnailImage(800, 600, true);
        }
        $image->writeImage($imageFullPath);
        $image->cropThumbnailImage(200, 150);
        $image->writeImage($imageThumbPath);
        $this->image_name = $imageName;
    }

    public function generateImageName() {
        $imageName = uniqid(time()) . '.jpg';
        return $imageName;
    }

    public function getImagePath() {
        return Yii::getAlias('@webroot') . '/images/gallery/' . $this->image_name;
    }

    public function getThumbPath() {
        return Yii::getAlias('@webroot') . '/images/gallery/thumbs/' . $this->image_name;
    }

    public function getImageLink() {
        return '/images/gallery/' . $this->image_name;
    }

    public function getThumbLink()
    {
        return '/images/gallery/thumbs/' . $this->image_name;
    }

}
